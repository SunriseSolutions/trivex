{"version":3,"sources":["webpack:///./src/app/layouts/auth-layout/auth-layout.module.ts","webpack:///./src/app/layouts/auth-layout/auth-layout.routing.ts","webpack:///./src/app/pages/login/login.component.html","webpack:///./src/app/pages/login/login.component.scss","webpack:///./src/app/pages/login/login.component.ts","webpack:///./src/app/pages/register-event/register-event.component.html","webpack:///./src/app/pages/register-event/register-event.component.scss","webpack:///./src/app/pages/register-event/register-event.component.ts","webpack:///./src/app/pages/register/register.component.html","webpack:///./src/app/pages/register/register.component.scss","webpack:///./src/app/pages/register/register.component.ts","webpack:///./src/app/services/attendee.service.ts","webpack:///./src/app/services/settoken.service.ts"],"names":[],"mappings":"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","file":"layouts-auth-layout-auth-layout-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AuthLayoutRoutes } from './auth-layout.routing';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { LoginComponent } from '../../pages/login/login.component';\nimport { RegisterComponent } from '../../pages/register/register.component';\nimport { RegisterEventComponent } from '../../pages/register-event/register-event.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(AuthLayoutRoutes),\n    FormsModule,\n    NgbModule\n  ],\n  declarations: [\n    LoginComponent,\n    RegisterComponent,\n    RegisterEventComponent\n  ]\n})\nexport class AuthLayoutModule { }\n","import { Routes } from \"@angular/router\";\n\nimport { LoginComponent } from \"../../pages/login/login.component\";\nimport { RegisterComponent } from \"../../pages/register/register.component\";\nimport { RegisterEventComponent } from \"../../pages/register-event/register-event.component\";\n\nexport const AuthLayoutRoutes: Routes = [\n  { path: \"login\", component: LoginComponent },\n  { path: \"register\", component: RegisterComponent },\n  { path: \"register-event/:id\", component: RegisterEventComponent }\n];\n","module.exports = \"<div class=\\\"header bg-gradient-danger py-7 py-lg-8\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"header-body text-center mb-7\\\">\\n      <div class=\\\"row justify-content-center\\\">\\n        <div class=\\\"col-lg-5 col-md-6\\\">\\n          <h1 class=\\\"text-white\\\">TRIVESG</h1>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"separator separator-bottom separator-skew zindex-100\\\">\\n    <svg x=\\\"0\\\" y=\\\"0\\\" viewBox=\\\"0 0 2560 100\\\" preserveAspectRatio=\\\"none\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n      <polygon class=\\\"fill-default\\\" points=\\\"2560 0 2560 100 0 100\\\"></polygon>\\n    </svg>\\n  </div>\\n</div>\\n<!-- Page content -->\\n<div class=\\\"container mt--8 pb-5\\\">\\n  <div class=\\\"row justify-content-center\\\">\\n    <div class=\\\"col-lg-5 col-md-7\\\">\\n      <div class=\\\"card bg-secondary shadow border-0\\\">\\n        <div class=\\\"card-header bg-transparent\\\">\\n          <a class=\\\"navbar-brand text-center\\\" routerLinkActive=\\\"active\\\" [routerLink]=\\\"['/dashboard']\\\">\\n            <img style=\\\"width: 80%; margin-left: 10pt;\\\" src=\\\"assets/img/brand/logo.png\\\" />\\n          </a>\\n          <div class=\\\"text-center text-muted mb-4\\\">\\n            <h2>Sign in with credentials</h2>\\n          </div>\\n          <form (keyup.enter)=\\\"login()\\\" role=\\\"form\\\">\\n            <div *ngIf=\\\"invalidLogin\\\" class=\\\"alert alert-danger\\\">Invalid</div>\\n            <div class=\\\"form-group mb-3\\\">\\n              <div class=\\\"input-group input-group-alternative\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"ni ni-badge\\\"></i></span>\\n                </div>\\n                <input [(ngModel)]=\\\"orgCode\\\" name=\\\"orgCode\\\" class=\\\"form-control p-2\\\" placeholder=\\\"Organisation Code\\\"\\n                  type=\\\"email\\\">\\n\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group mb-3\\\">\\n              <div class=\\\"input-group input-group-alternative\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"ni ni-badge\\\"></i></span>\\n                </div>\\n                <input [(ngModel)]=\\\"idNumber\\\" name=\\\"idNumber\\\" class=\\\"p-2 form-control\\\" placeholder=\\\"NRIC/ID Number\\\"\\n                  type=\\\"password\\\">\\n\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <div class=\\\"input-group input-group-alternative\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"ni ni-mobile-button\\\"></i></span>\\n                </div>\\n                <input [(ngModel)]=\\\"phone\\\" name=\\\"phone\\\" class=\\\"p-2 form-control\\\" placeholder=\\\"Phone Number\\\"\\n                  type=\\\"text\\\">\\n\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <div class=\\\"input-group input-group-alternative\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"ni ni-calendar-grid-58\\\"></i></span>\\n                </div>\\n                <input #dobi class=\\\"form-control p-2 datepicker\\\" placeholder=\\\"Date of Birth\\\" name=\\\"dob\\\"\\n                  [(ngModel)]=\\\"dob\\\" ngbDatepicker #d=\\\"ngbDatepicker\\\" (click)=\\\"d.toggle()\\\" type=\\\"text\\\" [startDate]=\\\"{year: 1990, month: 1, day: 1}\\\" [minDate]=\\\"{year: 1970, month: 1, day: 1}\\\" />\\n\\n              </div>\\n\\n            </div>\\n          </form>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <form role=\\\"form\\\">\\n            <div class=\\\"custom-control custom-control-alternative custom-checkbox\\\">\\n              <input class=\\\"custom-control-input\\\" id=\\\" customCheckLogin\\\" type=\\\"checkbox\\\">\\n              <label class=\\\"custom-control-label\\\" for=\\\" customCheckLogin\\\">\\n                <span class=\\\"text-muted\\\">Remember me</span>\\n              </label>\\n            </div>\\n            <div class=\\\"text-center\\\">\\n              <button type=\\\"submit\\\" class=\\\"btn btn-primary my-4\\\" (click)=\\\"login()\\\">Sign in</button>\\n            </div>\\n          </form>\\n        </div>\\n      </div>\\n      <div class=\\\"row mt-3\\\">\\n        <div class=\\\"col-6\\\">\\n          <a href=\\\"javascript:void(0)\\\" class=\\\"text-light\\\"><small>Forgot password?</small></a>\\n        </div>\\n        <div class=\\\"col-6 text-right\\\">\\n          <a [routerLink]=\\\"['/register']\\\" class=\\\"text-light\\\"><small>Create new account</small></a>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5zY3NzIn0= */\"","import { AdminLayoutRoutes } from './../../layouts/admin-layout/admin-layout.routing';\nimport { Observable } from \"rxjs\";\nimport { PostService } from \"./../../services/post.service\";\nimport { Http } from \"@angular/http\";\nimport { AuthService } from \"./../../services/auth.service\";\nimport {\n  Component,\n  OnInit,\n  OnDestroy,\n  ViewChild,\n  Input,\n  ElementRef\n} from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { NgbDate, NgbCalendar } from \"@ng-bootstrap/ng-bootstrap\";\nimport * as jwt_decode from \"jwt-decode\";\nimport { getLocaleDateTimeFormat } from \"@angular/common\";\nimport { decode } from \"@angular/router/src/url_tree\";\nimport { toBase64String } from \"@angular/compiler/src/output/source_map\";\nimport { SettokenService } from \"src/app/services/settoken.service\";\nimport { error } from \"@angular/compiler/src/util\";\nimport { Routes } from '@angular/router';\n\n@Component({\n  selector: \"app-login\",\n  templateUrl: \"./login.component.html\",\n  styleUrls: [\"./login.component.scss\"]\n})\n\nexport class LoginComponent implements OnInit, OnDestroy {\n  // value formdata\n  orgCode;\n  phone;\n  idNumber;\n  id;\n  toQr;\n  //\n  dob: NgbDate;\n  posts: any[];\n  invalidLogin: boolean;\n  constructor(\n    private router: Router,\n    private service: PostService,\n    private http: Http,\n    private serviceToken: SettokenService,\n  ) {}\n\n  ngOnInit() {\n    // this.service.getDataAPI().subscribe(res => {\n    //   let get = res.json()[\"hydra:member\"][\"0\"][\"@id\"];\n    //   this.id = get;\n    // });\n  }\n\n  ngOnDestroy() {}\n\n  @ViewChild(\"dobi\") dobi: ElementRef;\n  asd;\n  login() {\n    const inputDob = this.dobi.nativeElement.value;\n    const formData = new FormData();\n    formData.append(\"org-code\", this.orgCode);\n    formData.append(\"phone\", this.phone);\n    formData.append(\"id-number\", this.idNumber);\n    formData.append(\"birth-date\", inputDob);\n    const formRef = new FormData();\n\n    this.service.postFormData(formData).subscribe(response => {\n      let setToken = response.json().token;\n      let imID = response.json().im_id;\n      console.log(\"token\", response);\n      localStorage.setItem(\"im_id\", imID);\n      localStorage.setItem(\"token\", setToken);\n      let id = response.json().im_id;\n      console.log();\n      // decoded\n      let token = setToken;\n      let decoded = jwt_decode(token);\n      console.log(decoded);\n      //refresh\n      let date = ~~(Date.now() / 1000);\n      console.log(date);\n      formRef.append(\"refresh_token\", response.json().refresh_token);\n      if (decoded.exp < date) {\n        this.service.refreshToken(formRef).subscribe(response => {\n          localStorage.setItem(\"token\", response.json().token);\n          console.log(\"token_refreshed\", response);\n        });\n      } \n      this.router.navigate([`club-members/${id}/qr-code`]);\n    });\n  }\n}","module.exports = \"<div class=\\\"header bg-gradient-danger py-7 py-lg-8\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"header-body text-center mb-7\\\">\\n      <div class=\\\"row justify-content-center\\\">\\n        <div class=\\\"col-lg-5 col-md-6\\\">\\n          <h1 class=\\\"text-white\\\">TRIVESG</h1>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"separator separator-bottom separator-skew zindex-100\\\">\\n    <svg x=\\\"0\\\" y=\\\"0\\\" viewBox=\\\"0 0 2560 100\\\" preserveAspectRatio=\\\"none\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n      <polygon class=\\\"fill-default\\\" points=\\\"2560 0 2560 100 0 100\\\"></polygon>\\n    </svg>\\n  </div>\\n</div>\\n<!-- Page content -->\\n<div class=\\\"container mt--8 pb-5\\\">\\n  <!-- Table -->\\n  <div class=\\\"row justify-content-center\\\">\\n    <div class=\\\"col-lg-6 col-md-8\\\">\\n      <div *ngIf=\\\"done\\\" class=\\\"card bg-secondary shadow border-0\\\">\\n        <div class=\\\"card-header bg-transparent pb-5\\\">\\n          <div class=\\\"text-center text-muted\\\">\\n            <h2>Register event successfully!</h2>\\n            <small>Your information has been submitted and the registration is pending approval from our\\n              administrator.</small>\\n          </div>\\n        </div>\\n      </div>\\n      <div *ngIf=\\\"!done\\\" class=\\\"card bg-secondary shadow border-0\\\">\\n        <div *ngIf=\\\"step == 1\\\" class=\\\"card-body\\\">\\n          <form class=\\\"text-center\\\">\\n            <h3>Please select your status.</h3>\\n            <div class=\\\"row mt-4\\\">\\n              <div class=\\\"col-md-6 mb-5 mb-lg-0\\\">\\n                <div class=\\\"px-4\\\">\\n                  <img (click)=\\\"toLogin()\\\" src=\\\"../assets/img/theme/team-1-800x800.jpg\\\"\\n                    class=\\\"rounded-circle img-center img-fluid shadow shadow-lg--hover\\\" style=\\\"width: 200px;\\\">\\n                  <div class=\\\"pt-4 text-center\\\">\\n\\n                    <div class=\\\"mt-3\\\">\\n\\n                        <button type=\\\"button\\\" (click)=\\\"toLogin()\\\" class=\\\"btn btn-primary\\\">A member</button>\\n\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"col-md-6 mb-5 mb-lg-0\\\">\\n                <div class=\\\"px-4\\\">\\n                  <img src=\\\"../assets/img/theme/team-2-800x800.jpg\\\"\\n                    class=\\\"rounded-circle img-center img-fluid shadow shadow-lg--hover\\\" style=\\\"width: 200px;\\\">\\n                  <div class=\\\"pt-4 text-center\\\">\\n                    <div class=\\\"mt-3\\\">\\n                      <button type=\\\"button\\\" (click)=\\\"model.role = 'host'; step = 2\\\" class=\\\"btn btn-warning\\\">Not a member</button>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </form>\\n        </div>\\n        <div *ngIf=\\\"step == 2\\\" class=\\\"card-body bg-transparent pb-5\\\">\\n          <div class=\\\"text-center text-muted mb-4\\\">\\n            <h2>Register an event</h2>\\n          </div>\\n\\n          <form role=\\\"form\\\">\\n            <div class=\\\"form-group\\\">\\n              <div class=\\\"input-group input-group-alternative mb-3\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"ni ni-hat-3\\\"></i></span>\\n                </div>\\n                <input class=\\\"form-control\\\" placeholder=\\\"First Name\\\" type=\\\"text\\\" [(ngModel)]=\\\"registration.givenName\\\"\\n                  name=\\\"givenName\\\">\\n              </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <div class=\\\"input-group input-group-alternative mb-3\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"ni ni-hat-3\\\"></i></span>\\n                </div>\\n                <input class=\\\"form-control\\\" placeholder=\\\"Last Name\\\" type=\\\"text\\\" [(ngModel)]=\\\"registration.familyName\\\"\\n                  name=\\\"familyName\\\">\\n              </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <div class=\\\"input-group input-group-alternative\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"ni ni-calendar-grid-58\\\"></i></span>\\n                </div>\\n                <input class=\\\"form-control datepicker\\\" placeholder=\\\"Date of Birth\\\" [(ngModel)]=\\\"dob\\\" name=\\\"dob\\\"\\n                  ngbDatepicker #d=\\\"ngbDatepicker\\\" (click)=\\\"d.toggle()\\\" type=\\\"text\\\" />\\n              </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <div class=\\\"input-group input-group-alternative mb-3\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"ni ni-hat-3\\\"></i></span>\\n                </div>\\n                <input class=\\\"form-control\\\" placeholder=\\\"Phone Number\\\" type=\\\"text\\\"\\n                  [(ngModel)]=\\\"registration.phoneNumber\\\" name=\\\"phoneNumber\\\">\\n              </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <div class=\\\"custom-control custom-control-alternative custom-checkbox\\\">\\n                <input class=\\\"custom-control-input\\\" id=\\\"maleCheckbox\\\" type=\\\"checkbox\\\"\\n                  [checked]=\\\"registration.gender == 'Male'\\\" (change)=\\\"registration.gender = 'Male'\\\">\\n                <label class=\\\"custom-control-label\\\" for=\\\"maleCheckbox\\\">\\n                  <span class=\\\"text-muted\\\">Male</span>\\n                </label>\\n              </div>\\n              <div class=\\\"custom-control custom-control-alternative custom-checkbox\\\">\\n                <input class=\\\"custom-control-input\\\" id=\\\"femaleCheckbox\\\" name=\\\"gender\\\" type=\\\"checkbox\\\"\\n                  [checked]=\\\"registration.gender == 'Female'\\\" (change)=\\\"registration.gender = 'Female'\\\">\\n                <label class=\\\"custom-control-label\\\" for=\\\"femaleCheckbox\\\">\\n                  <span class=\\\"text-muted\\\">Female</span>\\n                </label>\\n              </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <div class=\\\"input-group input-group-alternative mb-3\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"ni ni-email-83\\\"></i></span>\\n                </div>\\n                <input class=\\\"form-control\\\" placeholder=\\\"Email\\\" type=\\\"email\\\" [(ngModel)]=\\\"registration.email\\\"\\n                  name=\\\"email\\\">\\n              </div>\\n            </div>\\n            <!-- <div class=\\\"form-group\\\">\\n              <div class=\\\"input-group input-group-alternative\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"ni ni-lock-circle-open\\\"></i></span>\\n                </div>\\n                <input class=\\\"form-control\\\" placeholder=\\\"Password\\\" type=\\\"password\\\">\\n              </div>\\n            </div>\\n            <div class=\\\"text-muted font-italic\\\"><small>password strength: <span class=\\\"text-success font-weight-700\\\">strong</span></small></div>\\n            <div class=\\\"row my-4\\\">\\n              <div class=\\\"col-12\\\">\\n                <div class=\\\"custom-control custom-control-alternative custom-checkbox\\\">\\n                  <input class=\\\"custom-control-input\\\" id=\\\"customCheckRegister\\\" type=\\\"checkbox\\\">\\n                  <label class=\\\"custom-control-label\\\" for=\\\"customCheckRegister\\\">\\n                    <span class=\\\"text-muted\\\">I agree with the <a href=\\\"#!\\\">Privacy Policy</a></span>\\n                  </label>\\n                </div>\\n              </div>\\n            </div> -->\\n            <div *ngIf=\\\"error\\\" class=\\\"alert alert-danger\\\">\\n              {{error}}\\n            </div>\\n            <div class=\\\"text-center\\\">\\n              <button (click)=\\\"registerEvent()\\\" [disabled]=\\\"loading\\\" type=\\\"button\\\" class=\\\"btn btn-primary mt-4\\\">Register\\n                Event</button>\\n            </div>\\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3JlZ2lzdGVyLWV2ZW50L3JlZ2lzdGVyLWV2ZW50LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Routes, Router } from \"@angular/router\";\nimport { Http } from \"@angular/http\";\nimport { Component, OnInit, ViewChild, ElementRef } from \"@angular/core\";\nimport { Attendee } from \"../../models/Attendee\";\nimport { NgbDate } from \"@ng-bootstrap/ng-bootstrap\";\nimport { Registration } from \"../../models/Registration\";\nimport { AttendeeService } from \"../../services/attendee.service\";\nimport { PostService } from \"src/app/services/post.service\";\n\n@Component({\n  selector: \"app-register-event\",\n  templateUrl: \"./register-event.component.html\",\n  styleUrls: [\"./register-event.component.scss\"]\n})\nexport class RegisterEventComponent implements OnInit {\n  dob: NgbDate;\n\n  model = {\n    role: \"\"\n  };\n  registration: Registration = {\n    event: null,\n    middleName: \"\",\n    birthDate: \"\",\n    givenName: \"\",\n    familyName: \"\",\n    gender: \"\",\n    email: \"\",\n    phoneNumber: \"\",\n    accessToken: \"token\"\n  };\n  attendee: Attendee;\n\n  step = 1;\n  done = false;\n  loading = false;\n  error = \"\";\n  id;\n  constructor(\n    private service: PostService,\n    private attendeeService: AttendeeService,\n    private router: Router\n  ) {}\n\n  ngOnInit() {\n    \n  }\n\n  registerEvent() {\n    this.loading = true;\n    if (this.dob) {\n      this.registration.birthDate = new Date(\n        this.dob.year,\n        this.dob.month,\n        this.dob.day\n      ).toISOString();\n    }\n    this.attendee = {\n      registration: this.registration\n    };\n    this.attendeeService.postAttendee(this.attendee).subscribe(\n      res => {\n        this.loading = false;\n        this.done = true;\n        console.log(res);\n      },\n      err => {\n        this.error = err.error[\"hydra:description\"];\n        this.loading = false;\n      }\n    );\n  }\n  toLogin(){\n    this.router.navigate['/login'];\n  }\n}\n","module.exports = \"<div class=\\\"header bg-gradient-danger py-7 py-lg-8\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"header-body text-center mb-7\\\">\\n      <div class=\\\"row justify-content-center\\\">\\n        <div class=\\\"col-lg-5 col-md-6\\\">\\n          <h1 class=\\\"text-white\\\">TRIVESG</h1>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"separator separator-bottom separator-skew zindex-100\\\">\\n    <svg x=\\\"0\\\" y=\\\"0\\\" viewBox=\\\"0 0 2560 100\\\" preserveAspectRatio=\\\"none\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n      <polygon class=\\\"fill-default\\\" points=\\\"2560 0 2560 100 0 100\\\"></polygon>\\n    </svg>\\n  </div>\\n</div>\\n<!-- Page content -->\\n<div class=\\\"container mt--8 pb-5\\\">\\n  <!-- Table -->\\n  <div class=\\\"row justify-content-center\\\">\\n    <div class=\\\"col-lg-6 col-md-8\\\">\\n      <div *ngIf=\\\"done\\\" class=\\\"card bg-secondary shadow border-0\\\">\\n        <div class=\\\"card-header bg-transparent pb-5\\\">\\n          <div class=\\\"text-center text-muted\\\">\\n            <h2>Sign up successfully!</h2>\\n            <small>Your information has been submitted and the registration is pending approval from our administrator.</small>\\n          </div>\\n        </div>\\n      </div>\\n      <div *ngIf=\\\"!done\\\" class=\\\"card bg-secondary shadow border-0\\\">\\n        <div class=\\\"card-header bg-transparent pb-5\\\">\\n          <div class=\\\"text-center text-muted mb-4\\\">\\n            <h2>Sign up with credentials</h2>\\n          </div>\\n          <form role=\\\"form\\\">\\n            <div class=\\\"form-group\\\">\\n              <div class=\\\"input-group input-group-alternative mb-3\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"ni ni-hat-3\\\"></i></span>\\n                </div>\\n                <input class=\\\"form-control\\\" placeholder=\\\"First Name\\\" type=\\\"text\\\" [(ngModel)]=\\\"registration.givenName\\\" name=\\\"givenName\\\">\\n              </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <div class=\\\"input-group input-group-alternative mb-3\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"ni ni-hat-3\\\"></i></span>\\n                </div>\\n                <input class=\\\"form-control\\\" placeholder=\\\"Last Name\\\" type=\\\"text\\\" [(ngModel)]=\\\"registration.familyName\\\" name=\\\"familyName\\\">\\n              </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <div class=\\\"input-group input-group-alternative\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"ni ni-calendar-grid-58\\\"></i></span>\\n                </div>\\n                <input class=\\\"form-control datepicker\\\" placeholder=\\\"Date of Birth\\\" [(ngModel)]=\\\"dob\\\" name=\\\"dob\\\" ngbDatepicker #d=\\\"ngbDatepicker\\\" (click)=\\\"d.toggle()\\\" type=\\\"text\\\"/>\\n              </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <div class=\\\"input-group input-group-alternative mb-3\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"ni ni-hat-3\\\"></i></span>\\n                </div>\\n                <input class=\\\"form-control\\\" placeholder=\\\"Phone Number\\\" type=\\\"text\\\" [(ngModel)]=\\\"registration.phoneNumber\\\" name=\\\"phoneNumber\\\">\\n              </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <div class=\\\"custom-control custom-control-alternative custom-checkbox\\\">\\n                <input class=\\\"custom-control-input\\\" id=\\\"maleCheckbox\\\" type=\\\"checkbox\\\" [checked]=\\\"registration.gender == 'Male'\\\" (change)=\\\"registration.gender = 'Male'\\\">\\n                <label class=\\\"custom-control-label\\\" for=\\\"maleCheckbox\\\">\\n                  <span class=\\\"text-muted\\\">Male</span>\\n                </label>\\n              </div>\\n              <div class=\\\"custom-control custom-control-alternative custom-checkbox\\\">\\n                <input class=\\\"custom-control-input\\\" id=\\\"femaleCheckbox\\\" name=\\\"gender\\\" type=\\\"checkbox\\\" [checked]=\\\"registration.gender == 'Female'\\\" (change)=\\\"registration.gender = 'Female'\\\">\\n                <label class=\\\"custom-control-label\\\" for=\\\"femaleCheckbox\\\">\\n                  <span class=\\\"text-muted\\\">Female</span>\\n                </label>\\n              </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <div class=\\\"input-group input-group-alternative mb-3\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"ni ni-email-83\\\"></i></span>\\n                </div>\\n                <input class=\\\"form-control\\\" placeholder=\\\"Email\\\" type=\\\"email\\\" [(ngModel)]=\\\"registration.email\\\" name=\\\"email\\\">\\n              </div>\\n            </div>\\n            <!-- <div class=\\\"form-group\\\">\\n              <div class=\\\"input-group input-group-alternative\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"ni ni-lock-circle-open\\\"></i></span>\\n                </div>\\n                <input class=\\\"form-control\\\" placeholder=\\\"Password\\\" type=\\\"password\\\">\\n              </div>\\n            </div>\\n            <div class=\\\"text-muted font-italic\\\"><small>password strength: <span class=\\\"text-success font-weight-700\\\">strong</span></small></div>\\n            <div class=\\\"row my-4\\\">\\n              <div class=\\\"col-12\\\">\\n                <div class=\\\"custom-control custom-control-alternative custom-checkbox\\\">\\n                  <input class=\\\"custom-control-input\\\" id=\\\"customCheckRegister\\\" type=\\\"checkbox\\\">\\n                  <label class=\\\"custom-control-label\\\" for=\\\"customCheckRegister\\\">\\n                    <span class=\\\"text-muted\\\">I agree with the <a href=\\\"#!\\\">Privacy Policy</a></span>\\n                  </label>\\n                </div>\\n              </div>\\n            </div> -->\\n            <div *ngIf=\\\"error\\\" class=\\\"alert alert-danger\\\">\\n              {{error}}\\n            </div>\\n            <div class=\\\"text-center\\\">\\n              <button (click)=\\\"register()\\\" [disabled]=\\\"loading\\\" type=\\\"button\\\" class=\\\"btn btn-primary mt-4\\\">Create account</button>\\n            </div>\\n          </form>\\n        </div>\\n        <div class=\\\"card-body px-lg-5 py-lg-5\\\">\\n          <div class=\\\"text-center\\\">\\n            <a href=\\\"javascript:void(0)\\\" class=\\\"btn btn-neutral btn-icon mx-2 my-2\\\">\\n              <span class=\\\"btn-inner--icon\\\"><img src=\\\"assets/img/icons/common/facebook.svg\\\"></span>\\n              <span class=\\\"btn-inner--text\\\">Facebook</span>\\n            </a>\\n            <a href=\\\"javascript:void(0)\\\" class=\\\"btn btn-neutral btn-icon mx-2 my-2\\\">\\n              <span class=\\\"btn-inner--icon\\\"><img src=\\\"assets/img/icons/common/twitter.svg\\\"></span>\\n              <span class=\\\"btn-inner--text\\\">Twitter</span>\\n            </a>\\n            <a href=\\\"javascript:void(0)\\\" class=\\\"btn btn-neutral btn-icon mx-2 my-2\\\">\\n              <span class=\\\"btn-inner--icon\\\"><img src=\\\"assets/img/icons/common/google.svg\\\"></span>\\n              <span class=\\\"btn-inner--text\\\">Google</span>\\n            </a>\\n          </div>\\n          <div class=\\\"text-muted text-center mt-4 mb-2\\\"><small>Already have an account?</small></div>\\n          <div class=\\\"text-center\\\">\\n            <a [routerLink]=\\\"['/login']\\\" type=\\\"button\\\" class=\\\"btn btn-primary mb-4\\\">Login</a>\\n          </div>\\n        </div>            \\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3JlZ2lzdGVyL3JlZ2lzdGVyLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { NgbDate } from '@ng-bootstrap/ng-bootstrap';\nimport { Registration } from '../../models/Registration';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n  dob: NgbDate;\n  done = false;\n  loading = false;\n  error = '';\n\n  registration: Registration = {\n    middleName: '',\n    birthDate: '',\n    givenName: '',\n    familyName: '',\n    gender: '',\n    email: '',\n    phoneNumber: '',\n    accessToken: 'token'\n  }\n\n  constructor(\n    private authService: AuthService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  register() {\n    this.loading = true;\n    if (this.dob) {\n      this.registration.birthDate = new Date(this.dob.year, this.dob.month, this.dob.day).toISOString();\n    }\n    this.authService.postRegistration(this.registration).subscribe(\n      res => {\n      console.log(res);\n      this.loading = false;\n      this.done = true;\n    }, err => {\n      this.error = err.error['hydra:description'];\n      this.loading = false;\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from '../../environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { Attendee } from '../models/Attendee';\nimport { AuthService } from './auth.service';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AttendeeService {\n  apiBase = environment.eventApiBase;\n  route = '/attendees';\n  url = `${this.apiBase}${this.route}`;\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  postAttendee(attendee: Attendee): Observable<any> {\n    return this.http.post(this.url, attendee, {headers: AuthService.getHeaders()});\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SettokenService {\n\n  constructor() { }\n\n}\n"],"sourceRoot":""}